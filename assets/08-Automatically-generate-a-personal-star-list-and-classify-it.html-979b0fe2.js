import{_ as t,r as o,o as l,c as p,a as n,b as s,e,d as i}from"./app-ff2f727b.js";const c={},u=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),r=n("p",null,"当我们在GitHub中冲浪时，遇到优秀的项目经常会为之点赞，但就像网络上经常说的玩笑一样：收藏等于会了。其实我们不应该让这些已被自己赏识过的项目石沉大海，那么，如果有一个项目能把自己过去star过得项目自动整理并归类就好了。",-1),d=n("p",null,"本文就将介绍如何利用GitHub Actions来实现这个功能。",-1),k=n("h2",{id:"展示",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#展示","aria-hidden":"true"},"#"),s(" 展示")],-1),m={href:"https://github.com/eryajf/awesome-stars-eryajf",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#配置","aria-hidden":"true"},"#"),s(" 配置")],-1),_=n("p",null,"所用 Actions。",-1),v={href:"https://github.com/simonecorsi/mawesome",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>使用配置其实非常简单，基本上阅读完官方介绍文档就可以上手使用了。</p><p>添加 Actions 配置文件，e.g. <code>.github/workflows/star-list.yml</code>：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Update awesome list

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
  <span class="token key atrule">schedule</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#39;0 0 * * *&#39;</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Awesome generator
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> simonecorsi/mawesome@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">api-token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">github-email</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USER_EMAIL <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">template-path</span><span class="token punctuation">:</span> <span class="token string">&quot;/template/README.ejs&quot;</span>
          <span class="token key atrule">github-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository_owner <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置项也都比较简单，不做过多赘述，根据自己的实际情况调整即可。</p>`,4),y=n("code",null,"ACCESS_TOKEN",-1),f={href:"https://wiki.eryajf.net/pages/47a507/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/simonecorsi/mawesome/blob/main/TEMPLATE.ejs",target:"_blank",rel:"noopener noreferrer"};function w(E,A){const a=o("ExternalLinkIcon");return l(),p("div",null,[u,r,d,k,n("p",null,[s("我已通过此方案，创建了一个个人star list的仓库："),n("a",m,[s("awesome-stars-eryajf"),e(a)])]),h,_,n("ul",null,[n("li",null,[n("a",v,[s("mawesome"),e(a)])])]),b,n("p",null,[s("配置文件中用到了 "),y,s("以及其他保密信息，我的这篇文章有详细介绍如何生成以及配置，可直接参考： "),n("a",f,[s("https://wiki.eryajf.net/pages/47a507/"),e(a)])]),n("p",null,[s("默认情况下，项目运行时会加载一个"),n("a",g,[s("默认的模板"),e(a)]),s("来解析成README文件，如果你有不同的需求，可以自行对其进行定制。")])])}const j=t(c,[["render",w],["__file","08-Automatically-generate-a-personal-star-list-and-classify-it.html.vue"]]);export{j as default};
